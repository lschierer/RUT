#+POSTID: 37
#+DATE: [2005-02-04 Fri 17:12]
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil TeX:nil
#+CATEGORY: Pidgin
#+TAGS: 
#+TITLE: 20050204-1212

Anyone who follows gaim development is almost certainly never\#$NEWLINE-MARKER$\#going to find this. But anyone who has found this, likely knows\#$NEWLINE-MARKER$\#how much time I spend thinking about gaim. Currently we are in a\#$NEWLINE-MARKER$\#huge quandary over where to draw the line between being reasonably\#$NEWLINE-MARKER$\#featureful and offering users choices, and keeping the user\#$NEWLINE-MARKER$\#interface simple enough for the "average" user to comprehend. "[Edging\#$NEWLINE-MARKER$\#Toward the Ninety/Ten](http://www.ofb.biz/modules.php?name=News&file=article&sid=351&mode=&order=0&thold=0)" adds to this debate, being waged\#$NEWLINE-MARKER$\#in one for or another across the open source world. It does\#$NEWLINE-MARKER$\#however make some mistakes: it assumes that every user wants\#$NEWLINE-MARKER$\#*the same 10% of options and features*. If that were the\#$NEWLINE-MARKER$\#case, you wouldn't see migration costs moving from MacOS®;\#$NEWLINE-MARKER$\#to Windows®; or vice versa. One would be easier to use,\#$NEWLINE-MARKER$\#and there would be a one way learning curve. Really, good UI\#$NEWLINE-MARKER$\#means "doing what people expect," and then realizing that people\#$NEWLINE-MARKER$\#expect different things depending on their background. Options\#$NEWLINE-MARKER$\#should be *just barely* available enough to compensate for\#$NEWLINE-MARKER$\#different backgrounds, or else you get the kind of UI that causes [Joel\#$NEWLINE-MARKER$\#On Software](http://www.joelonsoftware.com/navLinks/fog0000000247.html) to become very popular writing about software\#$NEWLINE-MARKER$\#development.





